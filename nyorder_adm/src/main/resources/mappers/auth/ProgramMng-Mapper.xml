<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.namyang.nyorder.auth.dao.ProgramMngMapper">
	
	<select id="getGropLevel" resultType="com.namyang.nyorder.auth.vo.ProgramMngVO">
		SELECT DISTINCT MENU_LV
		  FROM dbo.T_ADM_MENU
		 WHERE MENU_LV <![CDATA[ <> ]]> '0'
	</select>
	
	<select id="getParentMenuList" resultType="com.namyang.nyorder.auth.vo.ProgramMngVO">
		<!-- SELECT SUB1.MENU_PARENT_SEQ
		       , AM2.MENU_NM 
		  FROM (
		         SELECT MENU_PARENT_SEQ
		           FROM dbo.T_ADM_MENU AM
		          WHERE MENU_PARENT_SEQ IS NOT NULL
		          GROUP BY MENU_PARENT_SEQ
		       ) SUB1
		       LEFT OUTER JOIN dbo.T_ADM_MENU AM2
		                    ON AM2.MENU_SEQ = SUB1.MENU_PARENT_SEQ -->
		SELECT MENU_SEQ
		       , MENU_NM
		  FROM dbo.T_ADM_MENU AM
		 WHERE MENU_LV = 1
	</select>
	
	<select id="programMngList" parameterType="com.namyang.nyorder.auth.vo.ProgramMngVO" resultType="com.namyang.nyorder.auth.vo.ProgramMngVO">
		WITH Tree AS (
		               SELECT ISNULL(MENU_ID, '') AS MENU_ID
		                      , MENU_SEQ
		                      , MENU_PARENT_SEQ
		                      , MENU_NM
		                      , MENU_URL
							  , MENU_ORDR
							  , MENU_LV
							  , USE_YN
		                      , CONVERT(nvarchar(200), MENU_SEQ) AS SORT
		                      , CONVERT(nvarchar(200), MENU_NM) AS MENU_FULL_DETH_NM
		                 FROM  dbo.T_ADM_MENU
		                WHERE MENU_PARENT_SEQ = 0
		                UNION ALL
		               SELECT ISNULL(AM.MENU_ID, '') AS MENU_ID
		                      , AM.MENU_SEQ
		                      , AM.MENU_PARENT_SEQ
		                      , AM.MENU_NM
		                      , AM.MENU_URL
							  , AM.MENU_ORDR
							  , AM.MENU_LV
							  , AM.USE_YN
		                      , CONVERT(nvarchar(200), CONVERT(nvarchar(200), TR.SORT) +'>' + CONVERT(nvarchar(200), AM.MENU_SEQ)) AS SORT
		                      , CONVERT(nvarchar(200), CONVERT(nvarchar(200), TR.MENU_FULL_DETH_NM) +'>' + CONVERT(nvarchar(200), AM.MENU_NM)) AS MENU_FULL_DETH_NM
		                 FROM dbo.T_ADM_MENU AM, Tree TR
		                WHERE AM.MENU_PARENT_SEQ = TR.MENU_SEQ 
		)
		SELECT *
		  FROM Tree
		 WHERE 1=1
		<if test="@com.namyang.nyorder.util.MyBatisCmpr@isNotEmpty(menuSeq)">
		   AND MENU_SEQ = #{menuSeq}
		</if>
		<if test="@com.namyang.nyorder.util.MyBatisCmpr@isNotEmpty(menuLv)">
		   AND MENU_LV = #{menuLv}
		</if>
		<if test="@com.namyang.nyorder.util.MyBatisCmpr@isNotEmpty(menuNm)">
		   AND MENU_NM LIKE '%'+#{menuNm}+'%'
		</if>
		<if test="@com.namyang.nyorder.util.MyBatisCmpr@isNotEmpty(menuUrl)">
		   AND MENU_URL LIKE '%'+#{menuUrl}+'%'
		</if>
		 ORDER BY SORT
	</select>
	
	<update id="programMngUpd" parameterType="Map">
		UPDATE T_ADM_MENU
		   SET MENU_ORDR = #{menuOrdr}
		       , USE_YN = #{useYn}
		 WHERE MENU_SEQ = #{menuSeq}
	</update>
	
	<update id="programMngReg" parameterType="Map">
		INSERT INTO T_ADM_MENU 
		(
		    MENU_SEQ
		    , MENU_LV
		    , MENU_ID
		    , MENU_NM
		<if test="@com.namyang.nyorder.util.MyBatisCmpr@isNotEmpty(pMenuParentSeq)">
		    , MENU_PARENT_SEQ
		</if>
		<if test="@com.namyang.nyorder.util.MyBatisCmpr@isNotEmpty(menuDesc)">
		    , MENU_DESC
		</if>
		    , MENU_ADM_TYPE
		    , MENU_ORDR
		    , MENU_URL
		    , USE_YN
		    , REG_DTM
		    , REG_SEQ
		    , UPD_DTM
		    , UPD_SEQ
		)
		VALUES
		(
		    NEXT VALUE FOR SQ_ADM_MENU
		    , #{pMenuLv}
		    , #{pMenuId}
		    , #{pMenuNm}
		<if test="@com.namyang.nyorder.util.MyBatisCmpr@isNotEmpty(pMenuParentSeq)"> 
		    , #{pMenuParentSeq}
		</if>
		<if test="@com.namyang.nyorder.util.MyBatisCmpr@isNotEmpty(pMenuDesc)">
		    , #{pMenuDesc}
		</if>
		    , #{pMenuAdmType}  
		    , #{pMenuOrdr}  
		    , #{pMenuUrl} 
		    , 'Y'  
		    , CURRENT_TIMESTAMP
		    , #{admSeq}
		    , CURRENT_TIMESTAMP
		    , #{admSeq}
		)
	</update>
	
	<select id="getMenuOrdr" parameterType="Map" resultType="int">
		SELECT MAX(MENU_ORDR) + 1
		  FROM dbo.T_ADM_MENU
		 WHERE 1=1
		<choose>
			<when test="@com.namyang.nyorder.util.MyBatisCmpr@isNotEmpty(pMenuLv) and pMenuLv == '1'.toString()">
		   AND MENU_LV = #{pMenuLv}
			</when>
			<otherwise>
		   AND MENU_SEQ = #{pMenuParentSeq}
			</otherwise>
		</choose>
	</select>
	
	<select id="getMenuLevel" parameterType="Map" resultType="int">
		SELECT MENU_LV + 1
		  FROM dbo.T_ADM_MENU
		 WHERE 1=1
		   AND MENU_SEQ = #{pMenuParentSeq}
	</select>
	
</mapper>
